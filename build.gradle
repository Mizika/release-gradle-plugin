apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply from: 'params.gradle'

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    compileOnly(gradleApi())
    compileOnly(localGroovy())
    implementation "com.netflix.nebula:nebula-release-plugin:17.2.1"
    compileOnly("com.github.zafarkhaja:java-semver:0.9.0")

    testCompileOnly(gradleTestKit())
    testImplementation('junit:junit:4.12')
    testImplementation('org.assertj:assertj-core:3.6.2')
}

gradlePlugin {
    plugins {
        release {
            id = 'common.services.release-gradle-plugin'
            implementationClass = 'common.gradle.plugin.release.ReleasePlugin'
        }
    }
}

task fixIdeaPluginClasspath {
    doFirst {
        configure(tasks.pluginUnderTestMetadata) {
            def ideaClassesPath = project.buildDir.toPath().resolveSibling("out").resolve("production")
            def newClasspath = pluginClasspath as List
            newClasspath.add(0, ideaClassesPath)
            pluginClasspath.setFrom(newClasspath)
        }
    }
}
pluginUnderTestMetadata.mustRunAfter(fixIdeaPluginClasspath)

version = "1.1.0"
group = 'common.services'

publishing {
    repositories {
        def releaseRepo = rootProject.getParam('NEXUS_RELEASE', 'test')
        def snapshotRepo = rootProject.getParam('NEXUS_SNAPSHOTS', 'test')
        def deploymentUsername = rootProject.getParam('NEXUS_USERNAME', 'test')
        def deploymentPassword = rootProject.getParam('NEXUS_PASSWORD', 'test')
        def repo = (rootProject.version as String).contains('SNAPSHOT') ? snapshotRepo : releaseRepo
        maven {
            url "$repo"
            credentials {
                username "$deploymentUsername"
                password "$deploymentPassword"
            }
        }
    }
}